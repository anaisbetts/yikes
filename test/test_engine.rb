# Code Generated by ZenTest v. 3.7.1
#                 classname: asrt / meth =  ratio%
#                    Engine:    0 /    3 =   0.00%

$:.unshift File.dirname(__FILE__)
require 'helper'

class TestEngine < Test::Unit::TestCase
	def setup
		require 'engine'
		@eng = Engine.new
	end

	def test_convert_file_and_save
		#raise NotImplementedError, 'Need to write test_convert_file_and_save'
	end

	def test_extract_subpath
		assert_equal "to/target.avi", Engine.extract_subpath("/source/path", "/source/path/to/target.avi")
		assert_not_equal "", Engine.extract_subpath("", "/source/path/to/target.avi")
	end

	def test_build_target_path
		assert_equal "/target/dir/path/test.mp4", Engine.build_target_path("path/test.avi", "/target/dir")
	end

	def test_transcode_if_exists
		#raise NotImplementedError, 'Need to write test_transcode_if_exists'
	end
end

class TestFFMpegTranscoder < Test::Unit::TestCase
	def setup
		require 'engine'
		@fft = FFMpegTranscoder.new
	end

	def test_basic_transcode
		input = File.join(TestDir, 'test_files', 'MH_egyptian_pan_L2R.avi')
		output = File.join(TestDir, 'tmp.avi')
		@fft.transcode(input, output)

		# Let's see if the file exists
		opn = Pathname.new(output)
		assert opn.exist?
		opn.delete
	end

	def test_get_command
		input = "foo"
		output = 'bar'
		ret = @fft.get_command(input, output)

		# FIXME: This test sucks
		assert ret.include?(input)
		assert ret.include?(output)
		assert ret.include?("ffmpeg")
	end
end
